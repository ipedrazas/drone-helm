kind: pipeline
name: default

workspace:
  base: /go
  path: src/github.com/${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}


steps:
  - name: deps
    image: golang:1.10
    pull: true
    commands:
      - go get -u github.com/golang/dep/cmd/dep
      - dep ensure -update

  - name: test
    image: golang:1.10
    commands:
      - go vet
      - go test ./... -cover -coverprofile=coverage.out

  - name: build_linux_amd64
    image: golang:1.10
    environment:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    commands:
      - |
        if test "${DRONE_TAG}" = ""; then
          go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/amd64/${DRONE_REPO_NAME}
        else
          go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/amd64/${DRONE_REPO_NAME}
        fi

  - name: publish_linux_amd64
    image: plugins/docker
    auto_tag: true
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      dockerfile: Dockerfile
      repo: quay.io/ipedrazas/drone-helm
      registry: quay.io
    when:
      event: [ tag, push ]
